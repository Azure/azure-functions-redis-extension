parameters:
  - name: previewBuild
    type: boolean
    default: true

pr:
  branches:
    include:
      - main
trigger:
  branches:
    include:
      - main

variables:
  Codeql.Enabled: true
  # It is a release build if it is triggered by the main branch.
  isReleaseBuild: ${{ startsWith(variables['Build.SourceBranch'], 'refs/heads/main') }}
  majorVersion: 0
  minorVersion: 4
  patchVersion: $[ counter(format('{0}.{1}-{2}', variables['majorVersion'], variables['minorVersion'], variables['isReleaseBuild']), 0) ]
  fullVersion: $[ format('{0}.{1}.{2}', variables['majorVersion'], variables['minorVersion'], variables['patchVersion']) ]
  ${{ if parameters['previewBuild'] }}:
    releaseVersion: $[ format('{0}-{1}', variables['fullVersion'], 'preview') ]
  ${{ else }}:
    releaseVersion: fullVersion

jobs:
  - job: Extension
    displayName: dotnet and dotnet-isolated NuGet packages, java Maven package
    steps:
      - task: UseDotNet@2
        displayName: Install .NET SDK
        inputs:
          packageType: sdk
          version: 6.x
          performMultiLevelLookup: true

      - task: Bash@3
        displayName: Install Azure Functions Core Tools
        inputs:
          targetType: 'inline'
          script: 'wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb; sudo dpkg -i packages-microsoft-prod.deb; sudo apt-get update; sudo apt-get install -qq -y azure-functions-core-tools-4'

      # - task: Bash@3
      #   displayName: Download & Make Redis 6
      #   inputs:
      #     targetType: 'inline'
      #     script: 'sudo wget -P /redis https://download.redis.io/releases/redis-6.0.20.tar.gz; cd /redis; sudo tar -xzvf redis-6.0.20.tar.gz; cd redis-6.0.20; sudo make'

      # - task: Bash@3
      #   displayName: Download & Make Redis 6.2
      #   inputs:
      #     targetType: 'inline'
      #     script: 'sudo wget -P /redis https://download.redis.io/releases/redis-6.2.14.tar.gz; cd /redis; sudo tar -xzvf redis-6.2.14.tar.gz; cd redis-6.2.14; sudo make'

      # - task: Bash@3
      #   displayName: Download & Make Redis 7
      #   inputs:
      #     targetType: 'inline'
      #     script: 'sudo wget -P /redis https://download.redis.io/releases/redis-7.0.14.tar.gz; cd /redis; sudo tar -xzvf redis-7.0.14.tar.gz; cd redis-7.0.14; sudo make'

      - task: Bash@3
        displayName: Set local.settings.json secret values to environment variables
        inputs:
          targetType: 'inline'
          script: 'sed -i "s/{{AZURE_CACHE_HOST_NAME}}/$(AZURE_CACHE_HOST_NAME)/g; s/{{AZURE_CLIENT_ID}}/$(AZURE_CLIENT_ID)/g; s/{{AZURE_PRINCIPAL_ID}}/$(AZURE_PRINCIPAL_ID)/g; s/{{AZURE_TENANT_ID}}/$(AZURE_TENANT_ID)/g; s/{{AZURE_CLIENT_SECRET}}/$(AZURE_CLIENT_SECRET)/g" $(Build.SourcesDirectory)/test/dotnet/local.settings.json'
      
      - task: DotNetCoreCLI@2
        displayName: Test Microsoft.Azure.WebJobs.Extensions.Redis Debug
        inputs:
          command: test
          arguments: $(Build.SourcesDirectory)/test/dotnet/Microsoft.Azure.WebJobs.Extensions.Redis.Tests.csproj --configuration Debug --filter=SetDeleter_ManagedIdentity_SuccessfullyDeletes

      - task: DotNetCoreCLI@2
        displayName: Build Microsoft.Azure.WebJobs.Extensions.Redis Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          command: build
          arguments: $(Build.SourcesDirectory)/src/Microsoft.Azure.WebJobs.Extensions.Redis/Microsoft.Azure.WebJobs.Extensions.Redis.csproj --configuration Release -property:Version=$(releaseVersion)

      - task: EsrpCodeSigning@2
        displayName: Sign Microsoft.Azure.WebJobs.Extensions.Redis.dll Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          connectedServiceName: 'codesign-redis'
          folderPath: $(Build.SourcesDirectory)/src/Microsoft.Azure.WebJobs.Extensions.Redis/bin/Release/netstandard2.0
          pattern: Microsoft.Azure.WebJobs.Extensions.Redis.dll
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "KeyCode": "CP-230012",
                "OperationCode": "SigntoolSign",
                "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "http://www.microsoft.com",
                  "FileDigest": "/fd \"SHA256\"",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName": "sign",
                "ToolVersion": "1.0"
              },
              {
                "KeyCode": "CP-230012",
                "OperationCode": "SigntoolVerify",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: DotNetCoreCLI@2
        displayName: Build Microsoft.Azure.Functions.Worker.Extensions.Redis Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          command: build
          arguments: $(Build.SourcesDirectory)/src/Microsoft.Azure.Functions.Worker.Extensions.Redis/Microsoft.Azure.Functions.Worker.Extensions.Redis.csproj --configuration Release -property:Version=$(releaseVersion)

      - task: EsrpCodeSigning@2
        displayName: Sign Microsoft.Azure.Functions.Worker.Extensions.Redis.dll Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          connectedServiceName: 'codesign-redis'
          folderPath: $(Build.SourcesDirectory)/src/Microsoft.Azure.Functions.Worker.Extensions.Redis/bin/Release/netstandard2.0
          pattern: Microsoft.Azure.Functions.Worker.Extensions.Redis.dll
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "KeyCode": "CP-230012",
                "OperationCode": "SigntoolSign",
                "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "http://www.microsoft.com",
                  "FileDigest": "/fd \"SHA256\"",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName": "sign",
                "ToolVersion": "1.0"
              },
              {
                "KeyCode": "CP-230012",
                "OperationCode": "SigntoolVerify",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: DotNetCoreCLI@2
        displayName: Pack Microsoft.Azure.WebJobs.Extensions.Redis Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          command: custom
          custom: pack
          arguments: $(Build.SourcesDirectory)/src/Microsoft.Azure.WebJobs.Extensions.Redis/Microsoft.Azure.WebJobs.Extensions.Redis.csproj --configuration Release --no-build -property:Version=$(releaseVersion) --output $(Build.ArtifactStagingDirectory)/dotnet/$(releaseVersion)

      - task: DotNetCoreCLI@2
        displayName: Pack Microsoft.Azure.Functions.Worker.Extensions.Redis Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          command: custom
          custom: pack
          arguments: $(Build.SourcesDirectory)/src/Microsoft.Azure.Functions.Worker.Extensions.Redis/Microsoft.Azure.Functions.Worker.Extensions.Redis.csproj --configuration Release --no-build -property:Version=$(releaseVersion) --output $(Build.ArtifactStagingDirectory)/dotnet/$(releaseVersion)

      - task: EsrpCodeSigning@2
        displayName: Sign NuGet Packages
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          connectedServiceName: 'codesign-redis'
          folderPath: $(Build.ArtifactStagingDirectory)
          pattern: Microsoft.*.Extensions.Redis.*.*nupkg
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "KeyCode": "CP-401405",
                "OperationCode": "NuGetSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              },
              {
                "KeyCode": "CP-401405",
                "OperationCode": "NuGetVerify",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: Maven@3
        displayName: Set library version
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          mavenPomFile: $(Build.SourcesDirectory)/src/azure-functions-java-library-redis/pom.xml
          goals: versions:set
          options: --batch-mode --define=newVersion=$(releaseVersion) --define=org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --update-snapshots

      - task: Maven@3
        displayName: Build Java Annotations
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          mavenPomFile: $(Build.SourcesDirectory)/src/azure-functions-java-library-redis/pom.xml
          options: --batch-mode --define=org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --update-snapshots

      - powershell: |
          $prefix = 'azure-functions-java-library-redis-$(releaseVersion)'
          $source = '$(Build.SourcesDirectory)/src/azure-functions-java-library-redis'
          $destination = '$(Build.ArtifactStagingDirectory)/java/$(releaseVersion)'

          New-Item $destination -ItemType Directory
          Copy-Item "$source/pom.xml" "$destination/$prefix.pom"
          Copy-Item "$source/target/$prefix.jar" "$destination/$prefix.jar"
          Copy-Item "$source/target/$prefix-javadoc.jar" "$destination/$prefix-javadoc.jar"
          Copy-Item "$source/target/$prefix-sources.jar" "$destination/$prefix-sources.jar"
        displayName: Copy Java Annotations to staging directory
        condition: eq(variables.isReleaseBuild, 'True')

      - task: ManifestGeneratorTask@0
        displayName: Generate SBOM manifest
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          buildDropPath: $(Build.ArtifactStagingDirectory)/java/$(releaseVersion)
          packageName: Azure Functions Redis Java Bindings
          packageVersion: $(releaseVersion)

      - task: PublishBuildArtifacts@1
        displayName: Publish Extension
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop'
