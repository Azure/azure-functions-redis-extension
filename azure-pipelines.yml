pr:
  branches:
    include:
      - main

trigger:
  branches:
    include:
      - main
  tags:
    include:
      - v*.*.*

variables:
  # It is a release build if it is triggered by pushing a tag.
  isReleaseBuild: ${{ startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}

  prefix: $[format('0.{0:yyyy}.{0:MMdd}', pipeline.startTime)]
  version: $[format('{0}.{1}', variables.prefix, counter(variables.prefix, 1))] # e.g. 0.2001.0203.4
  fileVersion: $[variables.version]

jobs:
  # - job: test
  #   displayName: Build Debug, Test
  #   steps:
  #     - task: UseDotNet@2
  #       displayName: Install .NET SDK
  #       inputs:
  #         packageType: sdk
  #         version: 6.x
  #         performMultiLevelLookup: true

  #     - script: npm install -g azure-functions-core-tools
  #       displayName: 'Install Azure Functions Core Tools'

  #     - task: Bash@3
  #       displayName: Set npm installation path
  #       inputs:
  #         targetType: 'inline'
  #         script: 'echo "##vso[task.setvariable variable=nodeModulesPath]$(npm root -g)"'

  #     - task: Bash@3
  #       displayName: Download and start redis server, enable all keyspace/keyevent notifications
  #       inputs:
  #         targetType: 'inline'
  #         script: 'sudo apt-get install -qq -y redis; sudo service redis-server start; redis-cli config set notify-keyspace-events KEA'

  #     - task: DotNetCoreCLI@2
  #       displayName: Test
  #       inputs:
  #         command: test
  #         arguments: --configuration Debug

  - job: build
    displayName: Build Release, Generate & Sign Nuget Package
    # condition: eq(variables.isReleaseBuild, 'True')
    steps:
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: build
          arguments: --configuration Release -property:Version=$(fileVersion)

      # - task: EsrpCodeSigning@2
      #   displayName: Sign .dll
      #   inputs:
      #     connectedServiceName: 'redis-codesign'
      #     folderPath: src/bin/Release/netstandard2.0
      #     pattern: Microsoft.Azure.WebJobs.Extensions.Redis.dll
      #     signConfigType: inlineSignParams
      #     inlineOperation: |
      #       [
      #         {
      #           "KeyCode": "CP-230012",
      #           "OperationCode": "SigntoolSign",
      #           "Parameters": {
      #             "OpusName": "Microsoft",
      #             "OpusInfo": "http://www.microsoft.com",
      #             "FileDigest": "/fd \"SHA256\"",
      #             "PageHash": "/NPH",
      #             "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
      #           },
      #           "ToolName": "sign",
      #           "ToolVersion": "1.0"
      #         },
      #         {
      #           "KeyCode": "CP-230012",
      #           "OperationCode": "SigntoolVerify",
      #           "Parameters": {},
      #           "ToolName": "sign",
      #           "ToolVersion": "1.0"
      #         }
      #       ]
      - task: DotNetCoreCLI@2
        displayName: Pack
        inputs:
          command: pack
          searchPatternPack: src/Microsoft.Azure.WebJobs.Extensions.Redis.csproj
          configurationToPack: Release
          outputDir: $(Build.ArtifactStagingDirectory)
          nobuild: true
          includesymbols: true
          verbosityPack: minimal

      # - task: EsrpCodeSigning@2
      #   displayName: Sign .nupkg
      #   inputs:
      #       connectedServiceName: 'redis-codesign'
      #       folderPath: $(Build.ArtifactStagingDirectory)
      #       pattern: Microsoft.Azure.WebJobs.Extensions.Redis.*.nupkg
      #       signConfigType: inlineSignParams
      #       inlineOperation: |
      #         [
      #           {
      #             "KeyCode": "CP-401405",
      #             "OperationCode": "NuGetSign",
      #             "Parameters": {},
      #             "ToolName": "sign",
      #             "ToolVersion": "1.0"
      #           },
      #           {
      #             "KeyCode": "CP-401405",
      #             "OperationCode": "NuGetVerify",
      #             "Parameters": {},
      #             "ToolName": "sign",
      #             "ToolVersion": "1.0"
      #           }
      #         ]

      - task: DeleteFiles@1
        displayName: Cleanup Directory
        inputs:
          sourceFolder: $(Build.ArtifactStagingDirectory)
          contents: CodeSignSummary*.md

      # - task: PublishBuildArtifacts@1
      #   displayName: Publish
      #   inputs:
      #     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      #     artifactName: 'drop'
