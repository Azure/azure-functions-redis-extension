parameters:
  - name: previewBuild
    type: boolean
    default: true

pr:
  branches:
    include:
      - main
trigger:
  branches:
    include:
      - main

variables:
  majorVersion: 0
  minorVersion: 1
  majorMinorVersion: $[ format('{0}.{1}', variables['majorVersion'], variables['minorVersion']) ]
  fullVersion: $[ format('{0}.{1}', variables['majorMinorVersion'], counter(variables['majorMinorVersion'], 0)) ]
  ${{ if parameters['previewBuild'] }}:
    releaseVersion: $[ format('{0}-{1}', variables['fullVersion'], 'preview') ]
  ${{ else }}:
    releaseVersion: fullVersion

  # It is a release build if it is triggered by the main branch.
  isReleaseBuild: ${{ startsWith(variables['Build.SourceBranch'], 'refs/heads/main') }}

jobs:
  - job: testDotnet
    displayName: Test Debug
    steps:
      - task: UseDotNet@2
        displayName: Install .NET SDK
        inputs:
          packageType: sdk
          version: 6.x
          performMultiLevelLookup: true

      - script: npm install -g azure-functions-core-tools
        displayName: 'Install Azure Functions Core Tools'

      - task: Bash@3
        displayName: Set npm installation path
        inputs:
          targetType: 'inline'
          script: 'echo "##vso[task.setvariable variable=nodeModulesPath]$(npm root -g)"'

      - task: Bash@3
        displayName: Download and start redis server, enable all keyspace/keyevent notifications
        inputs:
          targetType: 'inline'
          script: 'sudo apt-get install -qq -y redis; sudo service redis-server start; redis-cli config set notify-keyspace-events KEA'

      - task: DotNetCoreCLI@2
        displayName: Test
        env:
          NODE_MODULES_PATH: '$(nodeModulesPath)'
        inputs:
          command: test
          arguments: --configuration Debug

  - job: buildDotnet
    displayName: Build Release, Generate & Sign Nuget Package
    condition: eq(variables.isReleaseBuild, 'True')
    steps:
      - task: DotNetCoreCLI@2
        displayName: Build
        env:
          NODE_MODULES_PATH: '$(nodeModulesPath)'
        inputs:
          command: build
          arguments: --configuration Release -property:Version=$(releaseVersion)

      - task: EsrpCodeSigning@2
        displayName: Sign .dll
        inputs:
          connectedServiceName: 'redis-codesign'
          folderPath: src/bin/Release/netstandard2.0
          pattern: Microsoft.Azure.WebJobs.Extensions.Redis.dll
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "KeyCode": "CP-230012",
                "OperationCode": "SigntoolSign",
                "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "http://www.microsoft.com",
                  "FileDigest": "/fd \"SHA256\"",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName": "sign",
                "ToolVersion": "1.0"
              },
              {
                "KeyCode": "CP-230012",
                "OperationCode": "SigntoolVerify",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: DotNetCoreCLI@2
        displayName: Pack
        inputs:
          command: custom
          custom: pack
          arguments: $(Build.SourcesDirectory)/src/Microsoft.Azure.WebJobs.Extensions.Redis.csproj -property:Configuration=Release -property:Version=$(releaseVersion) --output $(Build.ArtifactStagingDirectory) --no-build

      - task: EsrpCodeSigning@2
        displayName: Sign .nupkg
        inputs:
          connectedServiceName: 'redis-codesign'
          folderPath: $(Build.ArtifactStagingDirectory)
          pattern: Microsoft.Azure.WebJobs.Extensions.Redis.*.nupkg
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "KeyCode": "CP-401405",
                "OperationCode": "NuGetSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              },
              {
                "KeyCode": "CP-401405",
                "OperationCode": "NuGetVerify",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: DeleteFiles@1
        displayName: Cleanup Directory
        inputs:
          sourceFolder: $(Build.ArtifactStagingDirectory)
          contents: CodeSignSummary*.md

      - task: PublishBuildArtifacts@1
        displayName: Publish
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop'

  - job: buildJava
    displayName: Java Library
    # condition: eq(variables.isReleaseBuild, 'True')
    steps:
      - task: Maven@3
        displayName: Set library version
        inputs:
          mavenPomFile: java-library/pom.xml
          goals: versions:set
          options: --batch-mode --define=newVersion=$(releaseVersion) --define=org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --update-snapshots

      - task: Maven@3
        displayName: Build library
        inputs:
          mavenPomFile: java-library/pom.xml
          options: --batch-mode --define=org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --update-snapshots

      - powershell: |
          $prefix = 'azure-functions-java-library-redis-$(releaseVersion)'
          $source = 'java-library'
          $destination = '$(Build.ArtifactStagingDirectory)/$(releaseVersion)'
          New-Item $destination -ItemType Directory
          Copy-Item "$source/pom.xml" "$destination/$prefix.pom"
          Copy-Item "$source/target/$prefix.jar" "$destination/$prefix.jar"
          Copy-Item "$source/target/$prefix-javadoc.jar" "$destination/$prefix-javadoc.jar"
          Copy-Item "$source/target/$prefix-sources.jar" "$destination/$prefix-sources.jar"
        displayName: Copy output files

      - task: ManifestGeneratorTask@0
        displayName: Generate SBOM manifest
        inputs:
          buildDropPath: $(Build.ArtifactStagingDirectory)/$(releaseVersion)
          packageName: Azure Functions Redis Java Bindings
          packageVersion: $(releaseVersion)

      - publish: $(Build.ArtifactStagingDirectory)
        displayName: Publish library package
        artifact: drop-java-library
