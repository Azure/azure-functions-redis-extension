parameters:
  - name: previewBuild
    type: boolean
    default: true

pr:
  branches:
    include:
      - main
trigger:
  branches:
    include:
      - main

variables:
  majorVersion: 0
  minorVersion: 2
  majorMinorVersion: $[ format('{0}.{1}', variables['majorVersion'], variables['minorVersion']) ]
  fullVersion: $[ format('{0}.{1}', variables['majorMinorVersion'], counter(variables['majorMinorVersion'], 0)) ]
  ${{ if parameters['previewBuild'] }}:
    releaseVersion: $[ format('{0}-{1}', variables['fullVersion'], 'preview') ]
  ${{ else }}:
    releaseVersion: fullVersion

  # It is a release build if it is triggered by the main branch.
  isReleaseBuild: ${{ startsWith(variables['Build.SourceBranch'], 'refs/heads/main') }}

jobs:
  - job: Extension
    displayName: WebJobs.Extensions.Redis NuGet package
    steps:
      - task: UseDotNet@2
        displayName: Install .NET SDK
        inputs:
          packageType: sdk
          version: 6.x
          performMultiLevelLookup: true

      - task: Bash@3
        displayName: Install Azure Functions Core Tools
        inputs:
          targetType: 'inline'
          script: 'wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb; sudo dpkg -i packages-microsoft-prod.deb; sudo apt-get update; sudo apt-get install -qq -y azure-functions-core-tools-4'

      - task: Bash@3
        displayName: Download and start redis server, enable all keyspace/keyevent notifications
        inputs:
          targetType: 'inline'
          script: 'sudo apt-get install -qq -y redis; sudo service redis-server start; redis-cli config set notify-keyspace-events KEA'

      - task: DotNetCoreCLI@2
        displayName: Test Debug
        inputs:
          command: test
          arguments: --configuration Debug

      - task: DotNetCoreCLI@2
        displayName: Pack Release
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          command: custom
          custom: pack
          arguments: $(Build.SourcesDirectory)/src/Microsoft.Azure.WebJobs.Extensions.Redis.csproj --configuration Release -property:Version=$(releaseVersion) --output $(Build.ArtifactStagingDirectory)/dotnet/$(releaseVersion)

      - task: PublishBuildArtifacts@1
        displayName: Publish Artifact
        condition: eq(variables.isReleaseBuild, 'True')
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop'